{"version":3,"sources":["reducers/todo.js","reducers/index.js","constants/todo_types.js","components/PostItem/PostItem.js","components/ShowPost/ShowPost.js","assets/authorData.js","components/AddPostDialog/AddPostDialog.js","index.js"],"names":["initialState","authorName","avatar","nickName","content","image","date","comments","retweets","likes","combineReducers","todo","state","action","type","props","className","src","alt","icon","faComment","faRetweet","faHeart","connect","ownProps","map","item","index","PostItem","key","authorData","textInput","useRef","textInputImg","React","useState","openModal","setOpenModal","error","setError","author","setAuthor","postText","setPostText","imgLink","setImgLink","handleClose","dispatch","useDispatch","postFunction","authorNickName","authorAvatar","moment","format","Button","variant","color","onClick","Dialog","open","onClose","aria-labelledby","DialogTitle","id","DialogContent","name","value","placeholder","ref","onChange","event","target","DialogActions","authorArr","filter","length","authorNamen","store","createStore","rootStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","AddPostDialog","document","getElementById"],"mappings":"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","file":"static/js/main.d6bcb1aa.chunk.js","sourcesContent":["import { ADD_POST_TODO } from \"../constants/todo_types\";\r\nconst initialState = [\r\n  {\r\n    authorName: \"Anakin skywalker\",\r\n    avatar:\r\n      \"https://upload.wikimedia.org/wikipedia/en/thumb/7/74/Anakin-Jedi.jpg/220px-Anakin-Jedi.jpg\",\r\n    nickName: \"@anakin_skywalkerr\",\r\n    content: \"WTF? Who is Ray? Why she is Skywalker? Luke...?\",\r\n    image:\r\n      \"https://specials-images.forbesimg.com/imageserve/5e63b3c8e1e617000759130e/960x0.jpg?fit=scale\",\r\n    date: \"27 бер.\",\r\n    comments: 1212,\r\n    retweets: 500,\r\n    likes: 12000,\r\n  },\r\n  {\r\n    authorName: \"Rey\",\r\n    avatar: \"https://upload.wikimedia.org/wikipedia/en/a/af/Rey_Star_Wars.png\",\r\n    nickName: \"@rey\",\r\n    content:\r\n      \"После недавнего выхода фильма «Звездные войны: Скайуокер. Восход» последует небольшая пауза, что касается выхода новых частей космической саги. Однако, судя по всему, процесс работы над следующей картиной продолжает идти.\",\r\n    image:\r\n      \"http://styleinsider.com.ua/wp-content/uploads/2020/01/labimg_870_Zvyozdnye-vojny.png\",\r\n    date: \"28 бер.\",\r\n    comments: 123,\r\n    retweets: 34,\r\n    likes: 2123,\r\n  },\r\n];\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST_TODO:\r\n      return [\r\n        {\r\n          authorName: action.authorName,\r\n          avatar: action.avatar,\r\n          nickName: action.nickName,\r\n          content: action.content,\r\n          image: action.image,\r\n          date: action.date,\r\n          comments: 0,\r\n          retweets: 0,\r\n          likes: 0,\r\n        },\r\n        ...state,\r\n      ];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport todos from \"./todo\";\r\nexport default combineReducers({ todo: todos });\r\n","export const ADD_POST_TODO = \"ADD_POST_TODO\";\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faRetweet } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faComment } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default (props) => {\r\n  return (\r\n    <article className=\"post\">\r\n      <div className=\"author-avatar\">\r\n        <img src={props.avatar} alt={props.authorName} />\r\n      </div>\r\n      <div className=\"post-content-wrapper\">\r\n        <div className=\"post-heading\">\r\n          <span className=\"author-name\">{props.authorName}</span>\r\n          <span className=\"author-nickname\">{props.nickName}</span>\r\n          <span className=\"sep\"> · </span>\r\n          <span className=\"post-date\">{props.date}</span>\r\n        </div>\r\n        <div className=\"post-content\">\r\n          <p>{props.content}</p>\r\n          <img src={props.image} alt=\"\" />\r\n        </div>\r\n        <div className=\"post-data\">\r\n          <span className=\"\">\r\n            <FontAwesomeIcon icon={faComment} />\r\n            {props.comments}\r\n          </span>\r\n          <span className=\"\">\r\n            <FontAwesomeIcon icon={faRetweet} />\r\n            {props.retweets}\r\n          </span>\r\n          <span className=\"\">\r\n            <FontAwesomeIcon icon={faHeart} />\r\n            {props.likes}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport PostItem from \"../PostItem\";\r\nimport { connect } from \"react-redux\";\r\nfunction ShowPost(props) {\r\n  return (\r\n    <div className=\"post-wrapper\">\r\n      {props.todo.map((item, index) => (\r\n        <PostItem\r\n          key={index}\r\n          authorName={item.authorName}\r\n          avatar={item.avatar}\r\n          nickName={item.nickName}\r\n          date={item.date}\r\n          content={item.content}\r\n          image={item.image}\r\n          comments={item.comments}\r\n          retweets={item.retweets}\r\n          likes={item.likes}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  return { todo: state.todo };\r\n}\r\nexport default connect(mapStateToProps)(ShowPost);\r\n","export const authorData = [\r\n  {\r\n    authorName: \"Anakin skywalker\",\r\n    avatar:\r\n      \"https://upload.wikimedia.org/wikipedia/en/thumb/7/74/Anakin-Jedi.jpg/220px-Anakin-Jedi.jpg\",\r\n    nickName: \"@anakin_skywalkerr\",\r\n  },\r\n  {\r\n    authorName: \"Rey\",\r\n    avatar: \"https://upload.wikimedia.org/wikipedia/en/a/af/Rey_Star_Wars.png\",\r\n    nickName: \"@rey\",\r\n  },\r\n  {\r\n    authorName: \"Han Solo\",\r\n    avatar:\r\n      \"https://upload.wikimedia.org/wikipedia/en/b/be/Han_Solo_depicted_in_promotional_image_for_Star_Wars_%281977%29.jpg\",\r\n    nickName: \"@han_solo\",\r\n  },\r\n  {\r\n    authorName: \"Obi Wan Kenobi\",\r\n    avatar: \"https://upload.wikimedia.org/wikipedia/en/c/c5/Obiwan1.jpg\",\r\n    nickName: \"@obiWanKenobi\",\r\n  },\r\n  {\r\n    authorName: \"Luke Skywalker\",\r\n    avatar: \"https://upload.wikimedia.org/wikipedia/en/9/9b/Luke_Skywalker.png\",\r\n    nickName: \"@luke_skywalker\",\r\n  },\r\n  {\r\n    authorName: \"Ben Solo\",\r\n    avatar: \"https://upload.wikimedia.org/wikipedia/en/3/34/Kylo_Ren.png\",\r\n    nickName: \"@benSolo\",\r\n  },\r\n  {\r\n    authorName: \"Princess Leia\",\r\n    avatar:\r\n      \"https://upload.wikimedia.org/wikipedia/en/1/1b/Princess_Leia%27s_characteristic_hairstyle.jpg\",\r\n    nickName: \"@leia_organa\",\r\n  },\r\n];\r\n","import React, { useState, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { ADD_POST_TODO } from \"../../constants/todo_types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport moment from \"moment\";\r\nimport \"./style.css\";\r\nimport \"moment/locale/uk\";\r\nimport { authorData } from \"../../assets/authorData\";\r\n\r\nexport default () => {\r\n  const textInput = useRef();\r\n  const textInputImg = useRef();\r\n  const [openModal, setOpenModal] = React.useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [postText, setPostText] = useState(\"\");\r\n  const [imgLink, setImgLink] = useState(\"\");\r\n\r\n  const openModalClick = () => {\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpenModal(false);\r\n    setPostText(\"\");\r\n    setImgLink(\"\");\r\n    setAuthor(\"\");\r\n  };\r\n  const handleChangeText = (event) => {\r\n    setPostText(event.target.value);\r\n  };\r\n  const handleChangeImg = (event) => {\r\n    setImgLink(event.target.value);\r\n  };\r\n  const handleChangeAuthor = (event) => {\r\n    setAuthor(event.target.value);\r\n  };\r\n  const dispatch = useDispatch();\r\n  const savePost = () => {\r\n    const authorArr = authorData.filter((item) => item.nickName === author);\r\n    if (author.length > 0 && imgLink.length > 0 && postText.length > 0) {\r\n      setError(false);\r\n      dispatch(\r\n        postFunction(\r\n          authorArr[0].nickName,\r\n          authorArr[0].avatar,\r\n          authorArr[0].authorNamen\r\n        )\r\n      );\r\n      handleClose();\r\n    } else {\r\n      setError(true);\r\n    }\r\n  };\r\n  const postFunction = (authorNickName, authorAvatar, authorName) => ({\r\n    type: ADD_POST_TODO,\r\n    authorName: authorName,\r\n    avatar: authorAvatar,\r\n    nickName: authorNickName,\r\n    content: postText,\r\n    image: imgLink,\r\n    date: moment().format(\"DD MMM\"),\r\n    comments: 0,\r\n    retweets: 0,\r\n    likes: 0,\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        className=\"add-post-btn\"\r\n        onClick={openModalClick}\r\n      >\r\n        Add Post\r\n      </Button>\r\n      <Dialog\r\n        open={openModal}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        className=\"add-post-popup\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Add post</DialogTitle>\r\n        <DialogContent>\r\n          <input\r\n            id=\"postText\"\r\n            name=\"postText\"\r\n            value={postText}\r\n            placeholder=\"Post text\"\r\n            type=\"text\"\r\n            className=\"input-text\"\r\n            ref={textInput}\r\n            onChange={handleChangeText}\r\n          />\r\n          <input\r\n            id=\"imgLink\"\r\n            name=\"imgLink\"\r\n            placeholder=\"Image Link\"\r\n            type=\"text\"\r\n            className=\"input-text\"\r\n            ref={textInputImg}\r\n            value={imgLink}\r\n            onChange={handleChangeImg}\r\n          />\r\n          <select\r\n            id=\"authorSelect\"\r\n            value={author}\r\n            onChange={handleChangeAuthor}\r\n          >\r\n            <option value=\"@rey\">Rey</option>\r\n            <option value=\"@anakin_skywalkerr\">Anakin Skywalkerr</option>\r\n            <option value=\"@han_solo\">Han Solo</option>\r\n            <option value=\"@obiWanKenobi\">Obi Wan Kenobi</option>\r\n            <option value=\"@luke_skywalker\">Luke Skywalker</option>\r\n            <option value=\"@benSolo\">Ben Solo</option>\r\n            <option value=\"@leia_organa\">Princess Leia</option>\r\n          </select>\r\n          {error === true ? (\r\n            <span className=\"error-message\">Please fill in all fields!</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} variant=\"contained\" color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={savePost} variant=\"contained\" color=\"primary\">\r\n            Add\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport rootStore from \"./reducers\";\nimport ShowPost from \"./components/ShowPost\";\nimport AddPostDialog from \"./components/AddPostDialog\";\nimport \"./reset.css\";\nimport \"./components/ShowPost/style.css\";\n\nconst store = createStore(\n  rootStore,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <AddPostDialog />\n      <ShowPost />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}